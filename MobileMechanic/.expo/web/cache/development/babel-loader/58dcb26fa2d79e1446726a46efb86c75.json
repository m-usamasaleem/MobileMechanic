{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/1-React-Native/SE-Project/MobileMechanic/components/screenSnippets/SignInCustForm.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from 'formik';\nimport firebase from \"./FirebaseInit\";\n\nvar SignInCustForm = function SignInCustForm(props) {\n  return React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      pass: ''\n    },\n    onSubmit: function onSubmit(formData, actions) {\n      console.log('Form Data:', formData);\n      var userEmail = formData.email;\n      userEmail = userEmail.replace(/\\./g, ',');\n      var userEmailToPass = userEmail.replace(/\\,/g, '.');\n      var userPassword = formData.pass;\n      firebase.database().ref(\"mobileMechanic/Clients/\" + userEmail).once('value', function (data) {\n        var firebaseDataString = JSON.stringify(data);\n        var firebaseDataJSON = JSON.parse(firebaseDataString);\n\n        if (firebaseDataJSON) {\n          if (firebaseDataJSON.password === userPassword) {\n            console.log(\"Login Successful .... Email and password both match\");\n            props.navigateTo('ServicesCust', {\n              userEmail: userEmailToPass\n            });\n          } else {\n            console.log(\"Login Failed ... Email matched but password did not\");\n          }\n        } else {\n          console.log(\"Login Failed .... Email did not match. Did not check password to save time\");\n        }\n      });\n      actions.resetForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: myStyles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Email\",\n      onChangeText: formikProps.handleChange('email'),\n      value: formikProps.values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Password\",\n      secureTextEntry: true,\n      onChangeText: formikProps.handleChange('pass'),\n      value: formikProps.values.pass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"Continue\",\n      onPress: formikProps.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }));\n  });\n};\n\nvar myStyles = StyleSheet.create({\n  form: {\n    textAlign: 'center'\n  },\n  inputField: {\n    textAlign: 'center'\n  },\n  formError: {\n    color: 'red',\n    fontSize: 12,\n    textAlign: 'center'\n  }\n});\nexport default SignInCustForm;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/1-React-Native/SE-Project/MobileMechanic/components/screenSnippets/SignInCustForm.js"],"names":["React","Formik","firebase","SignInCustForm","props","email","pass","formData","actions","console","log","userEmail","replace","userEmailToPass","userPassword","database","ref","once","data","firebaseDataString","JSON","stringify","firebaseDataJSON","parse","password","navigateTo","resetForm","formikProps","myStyles","form","inputField","handleChange","values","handleSubmit","StyleSheet","create","textAlign","formError","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react' \nimport { View, Text, StyleSheet, TextInput, Button } from 'react-native' \nimport { Formik } from 'formik'\nimport firebase from './FirebaseInit'\n\nconst SignInCustForm = (props) => {\n    return(\n        <Formik \n            initialValues = { {email: '', pass: ''} }\n            onSubmit = { (formData, actions) => {\n                console.log('Form Data:', formData);\n                let userEmail = formData.email;\n                userEmail = userEmail.replace(/\\./g, ','); \n                let userEmailToPass = userEmail.replace(/\\,/g, '.'); \n                let userPassword = formData.pass;\n                \n                firebase.database().ref(`mobileMechanic/Clients/${ userEmail }`).once('value', (data) => {\n                    let firebaseDataString = JSON.stringify(data); // JavaScript object to string\n                    let firebaseDataJSON = JSON.parse(firebaseDataString); // String to JSON\n\n                    if (firebaseDataJSON) {\n                        if (firebaseDataJSON.password === userPassword) {\n                            console.log(`Login Successful .... Email and password both match`);\n                            props.navigateTo('ServicesCust', {userEmail: userEmailToPass});\n                        } \n                        else {\n                            console.log(`Login Failed ... Email matched but password did not`);\n                        }\n                    }\n                    else {\n                        console.log(`Login Failed .... Email did not match. Did not check password to save time`);\n                    }\n                })\n\n                actions.resetForm();\n            }}> \n            {\n                (formikProps) => {\n                    return(\n                        <View style = { myStyles.form }> \n                            <TextInput \n                                style = { myStyles.inputField }\n                                placeholder = \"Enter Your Email\"\n                                onChangeText = {formikProps.handleChange('email')}\n                                value = { formikProps.values.email }\n                            />\n                            <TextInput \n                                style = { myStyles.inputField }\n                                placeholder = \"Enter Your Password\"\n                                secureTextEntry = {true}\n                                onChangeText = { formikProps.handleChange('pass') }\n                                value = { formikProps.values.pass }\n                            />\n                            <Button title = \"Continue\" onPress = { formikProps.handleSubmit } />\n                        </View>\n                    );\n                }\n            }\n        </Formik>\n    );\n}\n\nconst myStyles = StyleSheet.create({\n    form: {\n        textAlign: 'center', \n    },\n    inputField: {\n        textAlign: 'center'\n    },\n    formError: {\n        color: 'red', \n        fontSize: 12,\n        textAlign: 'center'\n    }\n});\n\nexport default SignInCustForm"]},"metadata":{},"sourceType":"module"}