{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/SignInMechanicForm.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from \"formik\";\nimport firebase from \"./FirebaseInit\";\nimport { NavigationActions } from \"react-navigation\";\n\nvar SignInCustForm = function SignInCustForm(props) {\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      pass: \"\"\n    },\n    onSubmit: function onSubmit(formData, actions) {\n      console.log(\"Form Data:\", formData);\n      var userEmail = formData.email;\n      userEmail = userEmail.replace(/\\./g, \",\");\n      var userEmailToPass = userEmail.replace(/\\,/g, \".\");\n      var userPassword = formData.pass;\n      firebase.database().ref(\"mobileMechanic/Clients/\" + userEmail).once(\"value\", function (data) {\n        var firebaseDataString = JSON.stringify(data);\n        var firebaseDataJSON = JSON.parse(firebaseDataString);\n\n        if (firebaseDataJSON) {\n          if (firebaseDataJSON.password === userPassword) {\n            console.log(\"Login Successful .... Email and password both match\");\n            props.navigateTo(\"MechanicRequests\", {\n              userEmail: userEmailToPass\n            });\n          } else {\n            console.log(\"Login Failed ... Email matched but password did not\");\n          }\n        } else {\n          console.log(\"Login Failed .... Email did not match. Did not check password to save time\");\n        }\n      });\n      actions.resetForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: myStyles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Email\",\n      onChangeText: formikProps.handleChange(\"email\"),\n      value: formikProps.values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Password\",\n      secureTextEntry: true,\n      onChangeText: formikProps.handleChange(\"pass\"),\n      value: formikProps.values.pass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: myStyles.loginScreenButton,\n      onPress: formikProps.handleSubmit,\n      underlayColor: \"#fff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: myStyles.loginText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Continue\")));\n  });\n};\n\nvar myStyles = StyleSheet.create({\n  form: {\n    textAlign: \"center\"\n  },\n  inputField: {\n    padding: 6,\n    textAlign: \"center\"\n  },\n  continueButton: {\n    backgroundColor: \"red\"\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#35b8b6\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    position: \"relative\"\n  },\n  loginText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  button: {\n    backgroundColor: \"#00aeef\",\n    borderColor: \"red\",\n    borderWidth: 5,\n    borderRadius: 15\n  },\n  formError: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"center\"\n  }\n});\nexport default SignInCustForm;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/SignInMechanicForm.js"],"names":["React","Formik","firebase","NavigationActions","SignInCustForm","props","email","pass","formData","actions","console","log","userEmail","replace","userEmailToPass","userPassword","database","ref","once","data","firebaseDataString","JSON","stringify","firebaseDataJSON","parse","password","navigateTo","resetForm","formikProps","myStyles","form","inputField","handleChange","values","loginScreenButton","handleSubmit","loginText","StyleSheet","create","textAlign","padding","continueButton","backgroundColor","marginRight","marginLeft","marginTop","paddingTop","paddingBottom","borderRadius","borderWidth","borderColor","position","color","paddingLeft","paddingRight","button","formError","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Formik } from \"formik\";\nimport firebase from \"./FirebaseInit\";\nimport { NavigationActions } from \"react-navigation\";\n\nconst SignInCustForm = (props) => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", pass: \"\" }}\n      onSubmit={(formData, actions) => {\n        console.log(\"Form Data:\", formData);\n        let userEmail = formData.email;\n        userEmail = userEmail.replace(/\\./g, \",\");\n        let userEmailToPass = userEmail.replace(/\\,/g, \".\");\n        let userPassword = formData.pass;\n\n        firebase\n          .database()\n          .ref(`mobileMechanic/Clients/${userEmail}`)\n          .once(\"value\", (data) => {\n            let firebaseDataString = JSON.stringify(data); // JavaScript object to string\n            let firebaseDataJSON = JSON.parse(firebaseDataString); // String to JSON\n\n            if (firebaseDataJSON) {\n              if (firebaseDataJSON.password === userPassword) {\n                console.log(\n                  `Login Successful .... Email and password both match`\n                );\n\n                props.navigateTo(\"MechanicRequests\", {\n                  userEmail: userEmailToPass,\n                });\n              } else {\n                console.log(\n                  `Login Failed ... Email matched but password did not`\n                );\n              }\n            } else {\n              console.log(\n                `Login Failed .... Email did not match. Did not check password to save time`\n              );\n            }\n          });\n        actions.resetForm();\n      }}\n    >\n      {(formikProps) => {\n        return (\n          <View style={myStyles.form}>\n            <TextInput\n              style={myStyles.inputField}\n              placeholder=\"Enter Your Email\"\n              onChangeText={formikProps.handleChange(\"email\")}\n              value={formikProps.values.email}\n            />\n            <TextInput\n              style={myStyles.inputField}\n              placeholder=\"Enter Your Password\"\n              secureTextEntry={true}\n              onChangeText={formikProps.handleChange(\"pass\")}\n              value={formikProps.values.pass}\n            />\n            <TouchableOpacity\n              style={myStyles.loginScreenButton}\n              onPress={formikProps.handleSubmit}\n              underlayColor=\"#fff\"\n            >\n              <Text style={myStyles.loginText}>Continue</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst myStyles = StyleSheet.create({\n  form: {\n    textAlign: \"center\",\n  },\n  inputField: {\n    padding: 6,\n    textAlign: \"center\",\n  },\n  continueButton: {\n    backgroundColor: \"red\",\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#35b8b6\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    position: \"relative\",\n  },\n  loginText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  button: {\n    backgroundColor: \"#00aeef\",\n    borderColor: \"red\",\n    borderWidth: 5,\n    borderRadius: 15,\n  },\n  formError: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"center\",\n  },\n});\n\nexport default SignInCustForm;\n"]},"metadata":{},"sourceType":"module"}