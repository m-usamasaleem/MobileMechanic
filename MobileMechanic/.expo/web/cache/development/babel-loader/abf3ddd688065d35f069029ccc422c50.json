{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/SignInCustForm.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from 'formik';\nimport firebase from \"./FirebaseInit\";\nimport { NavigationActions } from 'react-navigation';\n\nvar SignInCustForm = function SignInCustForm(props) {\n  return React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      pass: ''\n    },\n    onSubmit: function onSubmit(formData, actions) {\n      console.log('Form Data:', formData);\n      var userEmail = formData.email;\n      userEmail = userEmail.replace(/\\./g, ',');\n      var userEmailToPass = userEmail.replace(/\\,/g, '.');\n      var userPassword = formData.pass;\n      firebase.database().ref(\"mobileMechanic/Clients/\" + userEmail).once('value', function (data) {\n        var firebaseDataString = JSON.stringify(data);\n        var firebaseDataJSON = JSON.parse(firebaseDataString);\n\n        if (firebaseDataJSON) {\n          if (firebaseDataJSON.password === userPassword) {\n            console.log(\"Login Successful .... Email and password both match\");\n            props.navigateTo('CustTabsWrapper', {\n              userEmail: userEmailToPass\n            });\n          } else {\n            console.log(\"Login Failed ... Email matched but password did not\");\n          }\n        } else {\n          console.log(\"Login Failed .... Email did not match. Did not check password to save time\");\n        }\n      });\n      actions.resetForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: myStyles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Email\",\n      onChangeText: formikProps.handleChange('email'),\n      value: formikProps.values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      style: myStyles.inputField,\n      placeholder: \"Enter Your Password\",\n      secureTextEntry: true,\n      onChangeText: formikProps.handleChange('pass'),\n      value: formikProps.values.pass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: myStyles.loginScreenButton,\n      onPress: formikProps.handleSubmit,\n      underlayColor: \"#fff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: myStyles.loginText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, \"Continue\")));\n  });\n};\n\nvar myStyles = StyleSheet.create({\n  form: {\n    margin: '15%',\n    marginBottom: \"20%\",\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  inputField: {\n    padding: 6,\n    textAlign: 'center'\n  },\n  continueButton: {\n    backgroundColor: \"red\"\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#35b8b6\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    position: 'relative'\n  },\n  loginText: {\n    color: '#fff',\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  button: {\n    backgroundColor: '#00aeef',\n    borderColor: 'red',\n    borderWidth: 5,\n    borderRadius: 15\n  },\n  formError: {\n    color: 'red',\n    fontSize: 12,\n    textAlign: 'center'\n  }\n});\nexport default SignInCustForm;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/SignInCustForm.js"],"names":["React","Formik","firebase","NavigationActions","SignInCustForm","props","email","pass","formData","actions","console","log","userEmail","replace","userEmailToPass","userPassword","database","ref","once","data","firebaseDataString","JSON","stringify","firebaseDataJSON","parse","password","navigateTo","resetForm","formikProps","myStyles","form","inputField","handleChange","values","loginScreenButton","handleSubmit","loginText","StyleSheet","create","margin","marginBottom","marginTop","textAlign","padding","continueButton","backgroundColor","marginRight","marginLeft","paddingTop","paddingBottom","borderRadius","borderWidth","borderColor","position","color","paddingLeft","paddingRight","button","formError","fontSize"],"mappings":"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","sourcesContent":["import React from 'react' \nimport { View, Text, StyleSheet, TextInput, Button,TouchableOpacity } from 'react-native' \nimport { Formik } from 'formik'\nimport firebase from './FirebaseInit'\nimport { NavigationActions } from 'react-navigation'\n\nconst SignInCustForm = (props) => {\n    return(\n        <Formik \n            initialValues = { {email: '', pass: ''} }\n            onSubmit = { (formData, actions) => {\n                console.log('Form Data:', formData);\n                let userEmail = formData.email;\n                userEmail = userEmail.replace(/\\./g, ','); \n                let userEmailToPass = userEmail.replace(/\\,/g, '.'); \n                let userPassword = formData.pass;\n            \n                firebase.database().ref(`mobileMechanic/Clients/${ userEmail }`).once('value', (data) => {\n                    let firebaseDataString = JSON.stringify(data); // JavaScript object to string\n                    let firebaseDataJSON = JSON.parse(firebaseDataString); // String to JSON\n\n                    if (firebaseDataJSON) {\n                        if (firebaseDataJSON.password === userPassword) {\n                            console.log(`Login Successful .... Email and password both match`);\n                            props.navigateTo('CustTabsWrapper', {userEmail: userEmailToPass});\n                        } \n                        else {\n                            console.log(`Login Failed ... Email matched but password did not`);\n                        }\n                    }\n                    else {\n                        console.log(`Login Failed .... Email did not match. Did not check password to save time`);\n                    }\n                })\n                actions.resetForm();\n            }}> \n            {\n                (formikProps) => {\n                    return(\n                        <View style = { myStyles.form }> \n                            <TextInput \n                                style = { myStyles.inputField }\n                                placeholder = \"Enter Your Email\"\n                                onChangeText = {formikProps.handleChange('email')}\n                                value = { formikProps.values.email }\n                            />\n                            <TextInput \n                                style = { myStyles.inputField }\n                                placeholder = \"Enter Your Password\"\n                                secureTextEntry = {true}\n                                onChangeText = { formikProps.handleChange('pass') }\n                                value = { formikProps.values.pass }\n                            />\n                            <TouchableOpacity\n                                    style={myStyles.loginScreenButton}\n                                    onPress={ formikProps.handleSubmit }\n                                    underlayColor='#fff'>\n                                    <Text style={myStyles.loginText}>Continue</Text>\n                            </TouchableOpacity>\n                             \n                        </View>\n                    );\n                }\n            }\n        </Formik>\n    );\n}\n\nconst myStyles = StyleSheet.create({\n    form: {\n        margin: '15%',\n        marginBottom: \"20%\",\n        marginTop: 10,\n        textAlign: 'center', \n    },\n    inputField: {\n        padding: 6,\n        textAlign: 'center'\n    },\n    continueButton: {\n        backgroundColor:\"red\",\n    },\n    loginScreenButton:{\n        marginRight:40,\n        marginLeft:40,\n       marginTop:10,\n        paddingTop:10,\n        paddingBottom:10,\n        backgroundColor:\"#35b8b6\",\n        borderRadius:10,\n        borderWidth: 1,\n        borderColor: '#fff',\n        position: 'relative'\n      },\n  loginText:{\n      color:'#fff',\n      textAlign:'center',\n      paddingLeft : 10,\n      paddingRight : 10\n  },\n   button: {\n      backgroundColor: '#00aeef',\n      borderColor: 'red',\n      borderWidth: 5,\n      borderRadius: 15       \n   },\n    formError: {\n        color: 'red', \n        fontSize: 12,\n        textAlign: 'center'\n    }\n});\n\nexport default SignInCustForm"]},"metadata":{},"sourceType":"module"}