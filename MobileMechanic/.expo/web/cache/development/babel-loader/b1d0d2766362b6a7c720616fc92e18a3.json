{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/ProfileCustForm.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport firebase from \"../screenSnippets/FirebaseInit\";\nvar schema = yup.object({\n  firstName: yup.string().required('First name is required'),\n  lastName: yup.string().required('Last name is required'),\n  age: yup.number().required().positive().integer(),\n  creditCard: yup.string().required('Credit card number is required').length(16)\n});\n\nvar ProfileCustForm = function ProfileCustForm(props) {\n  var userEmail = props.userEmail;\n  userEmail = userEmail.replace(/\\./g, ',');\n\n  var _useState = useState('Enter Your First Name'),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstNameToShow = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState('Enter Your Last Name'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastNameToShow = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState('Enter Your Age'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ageToShow = _useState6[0],\n      setAge = _useState6[1];\n\n  var _useState7 = useState('Enter Your Credit Card'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      creditCardToShow = _useState8[0],\n      setCreditCard = _useState8[1];\n\n  var getData = function getData() {\n    firebase.database().ref(\"mobileMechanic/Clients/\" + userEmail).once('value', function (data) {\n      var firebaseDataString = JSON.stringify(data);\n      var firebaseDataJSON = JSON.parse(firebaseDataString);\n\n      if (firebaseDataJSON.firstName) {\n        console.log('Got data successfully ...');\n        setFirstName('FIRST NAME: ' + firebaseDataJSON.firstName);\n      }\n\n      if (firebaseDataJSON.lastName) {\n        setLastName('LAST NAME: ' + firebaseDataJSON.lastName);\n      }\n\n      if (firebaseDataJSON.age) {\n        setAge('AGE: ' + firebaseDataJSON.age);\n      }\n\n      if (firebaseDataJSON.creditCard) {\n        setCreditCard('CREDIT CARD NUMBER: ' + firebaseDataJSON.creditCard);\n      }\n    });\n  };\n\n  getData();\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      age: '',\n      creditCard: ''\n    },\n    validationSchema: schema,\n    onSubmit: function onSubmit(submittedData, control) {\n      control.resetForm();\n      var firstName = submittedData.firstName;\n      var lastName = submittedData.lastName;\n      var age = submittedData.age;\n      var creditCardNumb = submittedData.creditCard;\n      firebase.database().ref(\"mobileMechanic/Clients/\" + userEmail).update({\n        firstName: firstName,\n        lastName: lastName,\n        age: age,\n        creditCard: creditCardNumb\n      }).then(function () {\n        console.log(\"Profile updation successful ...\");\n        getData();\n      }).catch(function () {\n        console.log(\"Profile updation failed ...\");\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      style: {\n        textAlign: 'center'\n      },\n      placeholder: firstNameToShow,\n      onChangeText: formikProps.handleChange('firstName'),\n      value: formikProps.values.firstName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: myStyles.errors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \" \", formikProps.touched.firstName && formikProps.errors.firstName, \" \"), React.createElement(TextInput, {\n      style: {\n        textAlign: 'center'\n      },\n      placeholder: lastNameToShow,\n      onChangeText: formikProps.handleChange('lastName'),\n      value: formikProps.values.lastName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: myStyles.errors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \" \", formikProps.touched.lastName && formikProps.errors.lastName, \" \"), React.createElement(TextInput, {\n      style: {\n        textAlign: 'center'\n      },\n      placeholder: ageToShow,\n      onChangeText: formikProps.handleChange('age'),\n      value: formikProps.values.age,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: myStyles.errors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \" \", formikProps.touched.age && formikProps.errors.age, \" \"), React.createElement(TextInput, {\n      style: {\n        textAlign: 'center'\n      },\n      placeholder: creditCardToShow,\n      onChangeText: formikProps.handleChange('creditCard'),\n      value: formikProps.values.creditCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: myStyles.errors,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \" \", formikProps.touched.creditCard && formikProps.errors.creditCard, \" \"), React.createElement(Button, {\n      title: \"Update Profile\",\n      onPress: formikProps.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nvar myStyles = StyleSheet.create({\n  errors: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 12\n  }\n});\nexport default ProfileCustForm;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screenSnippets/ProfileCustForm.js"],"names":["React","useState","Formik","Field","yup","firebase","schema","object","firstName","string","required","lastName","age","number","positive","integer","creditCard","length","ProfileCustForm","props","userEmail","replace","firstNameToShow","setFirstName","lastNameToShow","setLastName","ageToShow","setAge","creditCardToShow","setCreditCard","getData","database","ref","once","data","firebaseDataString","JSON","stringify","firebaseDataJSON","parse","console","log","submittedData","control","resetForm","creditCardNumb","update","then","catch","formikProps","textAlign","handleChange","values","myStyles","errors","touched","handleSubmit","StyleSheet","create","color","fontSize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP;AAEA,IAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW;AACtBC,EAAAA,SAAS,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADW;AAEtBC,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAFY;AAGtBE,EAAAA,GAAG,EAAER,GAAG,CAACS,MAAJ,GAAaH,QAAb,GAAwBI,QAAxB,GAAmCC,OAAnC,EAHiB;AAItBC,EAAAA,UAAU,EAAEZ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,EAAwDO,MAAxD,CAA+D,EAA/D;AAJU,CAAX,CAAf;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AACAA,EAAAA,SAAS,GAAGA,SAAS,CAACC,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAAZ;;AAF+B,kBAISpB,QAAQ,CAAC,uBAAD,CAJjB;AAAA;AAAA,MAIxBqB,eAJwB;AAAA,MAIPC,YAJO;;AAAA,mBAKOtB,QAAQ,CAAC,sBAAD,CALf;AAAA;AAAA,MAKxBuB,cALwB;AAAA,MAKRC,WALQ;;AAAA,mBAMHxB,QAAQ,CAAC,gBAAD,CANL;AAAA;AAAA,MAMxByB,SANwB;AAAA,MAMbC,MANa;;AAAA,mBAOW1B,QAAQ,CAAC,wBAAD,CAPnB;AAAA;AAAA,MAOxB2B,gBAPwB;AAAA,MAONC,aAPM;;AAS/B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBzB,IAAAA,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,6BAAmDZ,SAAnD,EAAiEa,IAAjE,CAAsE,OAAtE,EAA+E,UAACC,IAAD,EAAU;AACrF,UAAIC,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAzB;AACA,UAAII,gBAAgB,GAAGF,IAAI,CAACG,KAAL,CAAWJ,kBAAX,CAAvB;;AAEA,UAAIG,gBAAgB,CAAC9B,SAArB,EAAgC;AAC5BgC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAlB,QAAAA,YAAY,CAAC,iBAAiBe,gBAAgB,CAAC9B,SAAnC,CAAZ;AACH;;AACD,UAAI8B,gBAAgB,CAAC3B,QAArB,EAA+B;AAC3Bc,QAAAA,WAAW,CAAC,gBAAgBa,gBAAgB,CAAC3B,QAAlC,CAAX;AACH;;AACD,UAAI2B,gBAAgB,CAAC1B,GAArB,EAA0B;AACtBe,QAAAA,MAAM,CAAC,UAAUW,gBAAgB,CAAC1B,GAA5B,CAAN;AACH;;AACD,UAAI0B,gBAAgB,CAACtB,UAArB,EAAiC;AAC7Ba,QAAAA,aAAa,CAAC,yBAAyBS,gBAAgB,CAACtB,UAA3C,CAAb;AACH;AACJ,KAjBD;AAkBH,GAnBD;;AAqBAc,EAAAA,OAAO;AAEP,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAK;AAACtB,MAAAA,SAAS,EAAE,EAAZ;AAAgBG,MAAAA,QAAQ,EAAE,EAA1B;AAA8BC,MAAAA,GAAG,EAAE,EAAnC;AAAuCI,MAAAA,UAAU,EAAE;AAAnD,KADtB;AAEI,IAAA,gBAAgB,EAAKV,MAFzB;AAGI,IAAA,QAAQ,EAAK,kBAACoC,aAAD,EAAgBC,OAAhB,EAA4B;AACrCA,MAAAA,OAAO,CAACC,SAAR;AAEA,UAAIpC,SAAS,GAAGkC,aAAa,CAAClC,SAA9B;AACA,UAAIG,QAAQ,GAAG+B,aAAa,CAAC/B,QAA7B;AACA,UAAIC,GAAG,GAAG8B,aAAa,CAAC9B,GAAxB;AACA,UAAIiC,cAAc,GAAGH,aAAa,CAAC1B,UAAnC;AAEAX,MAAAA,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,6BAAkDZ,SAAlD,EAA+D0B,MAA/D,CAAsE;AAClEtC,QAAAA,SAAS,EAAEA,SADuD;AAElEG,QAAAA,QAAQ,EAAEA,QAFwD;AAGlEC,QAAAA,GAAG,EAAEA,GAH6D;AAIlEI,QAAAA,UAAU,EAAE6B;AAJsD,OAAtE,EAKGE,IALH,CAKS,YAAM;AACXP,QAAAA,OAAO,CAACC,GAAR;AACAX,QAAAA,OAAO;AACV,OARD,EASCkB,KATD,CASQ,YAAM;AACVR,QAAAA,OAAO,CAACC,GAAR;AACH,OAXD;AAYH,KAvBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BI,UAACQ,WAAD,EAAiB;AACb,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAK;AAACC,QAAAA,SAAS,EAAE;AAAZ,OADd;AAEI,MAAA,WAAW,EAAI5B,eAFnB;AAGI,MAAA,YAAY,EAAK2B,WAAW,CAACE,YAAZ,CAAyB,WAAzB,CAHrB;AAII,MAAA,KAAK,EAAKF,WAAW,CAACG,MAAZ,CAAmB5C,SAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAK6C,QAAQ,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCL,WAAW,CAACM,OAAZ,CAAoB/C,SAApB,IAAiCyC,WAAW,CAACK,MAAZ,CAAmB9C,SAAzF,MAPJ,EASI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAK;AAAC0C,QAAAA,SAAS,EAAE;AAAZ,OADd;AAEI,MAAA,WAAW,EAAI1B,cAFnB;AAGI,MAAA,YAAY,EAAKyB,WAAW,CAACE,YAAZ,CAAyB,UAAzB,CAHrB;AAII,MAAA,KAAK,EAAKF,WAAW,CAACG,MAAZ,CAAmBzC,QAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAeI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAK0C,QAAQ,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCL,WAAW,CAACM,OAAZ,CAAoB5C,QAApB,IAAgCsC,WAAW,CAACK,MAAZ,CAAmB3C,QAAxF,MAfJ,EAiBI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAK;AAACuC,QAAAA,SAAS,EAAE;AAAZ,OADd;AAEI,MAAA,WAAW,EAAIxB,SAFnB;AAGI,MAAA,YAAY,EAAKuB,WAAW,CAACE,YAAZ,CAAyB,KAAzB,CAHrB;AAII,MAAA,KAAK,EAAKF,WAAW,CAACG,MAAZ,CAAmBxC,GAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,EAuBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAKyC,QAAQ,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCL,WAAW,CAACM,OAAZ,CAAoB3C,GAApB,IAA2BqC,WAAW,CAACK,MAAZ,CAAmB1C,GAAnF,MAvBJ,EAyBI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAK;AAACsC,QAAAA,SAAS,EAAE;AAAZ,OADd;AAEI,MAAA,WAAW,EAAItB,gBAFnB;AAGI,MAAA,YAAY,EAAKqB,WAAW,CAACE,YAAZ,CAAyB,YAAzB,CAHrB;AAII,MAAA,KAAK,EAAKF,WAAW,CAACG,MAAZ,CAAmBpC,UAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,EA+BI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAKqC,QAAQ,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCL,WAAW,CAACM,OAAZ,CAAoBvC,UAApB,IAAkCiC,WAAW,CAACK,MAAZ,CAAmBtC,UAA1F,MA/BJ,EAiCI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,gBAAhB;AAAiC,MAAA,OAAO,EAAKiC,WAAW,CAACO,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,CADJ;AAqCH,GAhEL,CADJ,CADJ;AAuEH,CAvGD;;AAyGA,IAAMH,QAAQ,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACJK,IAAAA,KAAK,EAAE,KADH;AAEJT,IAAAA,SAAS,EAAE,QAFP;AAGJU,IAAAA,QAAQ,EAAE;AAHN;AADuB,CAAlB,CAAjB;AAQA,eAAe1C,eAAf","sourcesContent":["import React, { useState } from 'react' \nimport { View, Text, StyleSheet, TextInput, Button, ScrollView } from 'react-native' \nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup' \nimport firebase from '../screenSnippets/FirebaseInit'\n\nconst schema = yup.object({\n    firstName: yup.string().required('First name is required'), \n    lastName: yup.string().required('Last name is required'), \n    age: yup.number().required().positive().integer(),\n    creditCard: yup.string().required('Credit card number is required').length(16), \n});\n\nconst ProfileCustForm = (props) => {\n    let userEmail = props.userEmail;\n    userEmail = userEmail.replace(/\\./g, ',');\n    \n    const [firstNameToShow, setFirstName] = useState('Enter Your First Name');\n    const [lastNameToShow, setLastName] = useState('Enter Your Last Name');\n    const [ageToShow, setAge] = useState('Enter Your Age');\n    const [creditCardToShow, setCreditCard] = useState('Enter Your Credit Card');\n\n    const getData = () => {\n        firebase.database().ref(`mobileMechanic/Clients/${ userEmail }`).once('value', (data) => {\n            let firebaseDataString = JSON.stringify(data); // JavaScript object to string\n            let firebaseDataJSON = JSON.parse(firebaseDataString); // String to JSON\n        \n            if (firebaseDataJSON.firstName) {\n                console.log('Got data successfully ...');\n                setFirstName('FIRST NAME: ' + firebaseDataJSON.firstName);\n            }\n            if (firebaseDataJSON.lastName) {\n                setLastName('LAST NAME: ' + firebaseDataJSON.lastName);\n            }\n            if (firebaseDataJSON.age) {\n                setAge('AGE: ' + firebaseDataJSON.age);\n            }\n            if (firebaseDataJSON.creditCard) {\n                setCreditCard('CREDIT CARD NUMBER: ' + firebaseDataJSON.creditCard);\n            }\n        })\n    }\n\n    getData();\n    \n    return(\n        <ScrollView> \n            <Formik \n                initialValues = { {firstName: '', lastName: '', age: '', creditCard: ''} }\n                validationSchema = { schema }\n                onSubmit = { (submittedData, control) => {\n                    control.resetForm();\n\n                    let firstName = submittedData.firstName; \n                    let lastName = submittedData.lastName; \n                    let age = submittedData.age;\n                    let creditCardNumb = submittedData.creditCard;\n\n                    firebase.database().ref(`mobileMechanic/Clients/${userEmail}`).update({\n                        firstName: firstName, \n                        lastName: lastName, \n                        age: age, \n                        creditCard: creditCardNumb\n                    }).then( () => { \n                        console.log(`Profile updation successful ...`);\n                        getData();\n                    })\n                    .catch( () => { \n                        console.log(`Profile updation failed ...`);\n                    });\n                }}\n            > \n            {\n                (formikProps) => {\n                    return(\n                        <View>\n                            <TextInput \n                                style = { {textAlign: 'center'} }\n                                placeholder = {firstNameToShow}\n                                onChangeText = { formikProps.handleChange('firstName') }\n                                value = { formikProps.values.firstName }\n                            />\n                            <Text style = { myStyles.errors }> { formikProps.touched.firstName && formikProps.errors.firstName } </Text>\n                            \n                            <TextInput \n                                style = { {textAlign: 'center'} }\n                                placeholder = {lastNameToShow}\n                                onChangeText = { formikProps.handleChange('lastName') }\n                                value = { formikProps.values.lastName }\n                            />\n                            <Text style = { myStyles.errors }> { formikProps.touched.lastName && formikProps.errors.lastName } </Text>\n\n                            <TextInput \n                                style = { {textAlign: 'center'} }\n                                placeholder = {ageToShow}\n                                onChangeText = { formikProps.handleChange('age') }\n                                value = { formikProps.values.age }\n                            />\n                            <Text style = { myStyles.errors }> { formikProps.touched.age && formikProps.errors.age } </Text>\n\n                            <TextInput \n                                style = { {textAlign: 'center'} }\n                                placeholder = {creditCardToShow}\n                                onChangeText = { formikProps.handleChange('creditCard') }\n                                value = { formikProps.values.creditCard }\n                            />\n                            <Text style = { myStyles.errors }> { formikProps.touched.creditCard && formikProps.errors.creditCard } </Text>\n                                \n                            <Button title = 'Update Profile' onPress = { formikProps.handleSubmit  } />\n                        </View>\n                    )\n                }\n            }\n            </Formik>\n        </ScrollView>\n    );\n}\n\nconst myStyles = StyleSheet.create({\n    errors: {\n        color: 'red', \n        textAlign: 'center', \n        fontSize: 12\n    }\n});\n\nexport default ProfileCustForm"]},"metadata":{},"sourceType":"module"}