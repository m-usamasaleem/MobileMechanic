{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screens/ConfirmCustOrder.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from \"../screenSnippets/FirebaseInit\";\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\n\nvar ConfirmCustOrder = function ConfirmCustOrder(navigationProps) {\n  var locationObject = navigationProps.navigation.getParam('locationObject');\n  var carName = navigationProps.navigation.getParam('carName');\n  var carImageKey = navigationProps.navigation.getParam('carImageKey');\n  var carModel = navigationProps.navigation.getParam('carModel');\n  var carNumber = navigationProps.navigation.getParam('carNumber');\n  var carDescriptionNote = navigationProps.navigation.getParam('carDescriptionNote');\n  var userEmail = navigationProps.navigation.getParam('userEmail');\n  userEmail = userEmail.replace(/\\./g, ',');\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      updateMsg = _useState2[1];\n\n  var _useState3 = useState('red'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      color = _useState4[0],\n      updateColor = _useState4[1];\n\n  var orderConfirmationHandler = function orderConfirmationHandler() {\n    firebase.database().ref(\"mobileMechanic/userRequests/\" + userEmail).set({\n      customerLocation: locationObject,\n      customerCarName: carName,\n      customerCarImageKey: carImageKey,\n      customerCarModel: carModel,\n      customerCarNumber: carNumber,\n      customerCarDescription: carDescriptionNote,\n      mechanicCNIC: ['dummyCNIC']\n    }).then(function () {\n      updateMsg('Please Wait. We are Finding You a Mechanic ...');\n      Alert.alert('Finding Mechanics', \"Congratulations! Your order has been placed successfully. Please wait while we connect you to the mechanics near by .... \", [{\n        text: \"OK\"\n      }]);\n    }).catch(function () {\n      Alert.alert('Ooops!', 'Some unknown error occurred. Could not place order. Please try again ...', [{\n        text: \"OK\"\n      }]);\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \" Confirm Your Order ... \"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \" Location: \", locationObject.longitude, \" and \", locationObject.latitude, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \" Car: \", carName, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \" Model: \", carModel, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \" Number Plate: \", carNumber, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \" Car Description: \", carDescriptionNote, \" \")), React.createElement(View, {\n    style: styles.heading4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginScreenButton,\n    onPress: orderConfirmationHandler,\n    underlayColor: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \" Confirm Order \"))), React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \" \", msg, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  heading4: {\n    paddingTop: 0.02 * windowHeight,\n    marginLeft: windowWidth * 0.01,\n    marginRight: windowWidth * 0.01,\n    width: windowWidth\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginBottom: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#35b8b6\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    position: 'relative'\n  },\n  loginText: {\n    color: '#fff',\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10\n  }\n});\nexport default ConfirmCustOrder;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screens/ConfirmCustOrder.js"],"names":["React","useState","firebase","windowHeight","Dimensions","get","height","windowWidth","width","ConfirmCustOrder","navigationProps","locationObject","navigation","getParam","carName","carImageKey","carModel","carNumber","carDescriptionNote","userEmail","replace","msg","updateMsg","color","updateColor","orderConfirmationHandler","database","ref","set","customerLocation","customerCarName","customerCarImageKey","customerCarModel","customerCarNumber","customerCarDescription","mechanicCNIC","then","Alert","alert","text","catch","marginTop","longitude","latitude","styles","heading4","loginScreenButton","loginText","textAlign","StyleSheet","create","paddingTop","marginLeft","marginRight","marginBottom","paddingBottom","backgroundColor","borderRadius","borderWidth","borderColor","position","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react' \nimport { Text, View, StyleSheet, TouchableOpacity, Dimensions, Alert } from 'react-native' \nimport firebase from '../screenSnippets/FirebaseInit'\n\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\n\n// const dummy = () => {\n//     return(\n//         console.log('Dummy called ...')\n//     );\n// }\n//     setInterval( () => {\n//         console.log('Hello');\n//     }, 1000);\n\nconst ConfirmCustOrder = ( navigationProps ) => {\n    let locationObject = (navigationProps.navigation.getParam('locationObject'));\n    let carName = (navigationProps.navigation.getParam('carName'));\n    let carImageKey = (navigationProps.navigation.getParam('carImageKey')); // required by mechanic\n    let carModel = (navigationProps.navigation.getParam('carModel'));\n    let carNumber = (navigationProps.navigation.getParam('carNumber'));\n    let carDescriptionNote = (navigationProps.navigation.getParam('carDescriptionNote'));\n    let userEmail = (navigationProps.navigation.getParam('userEmail')); // required by mechanic\n    userEmail = userEmail.replace(/\\./g, ',');\n\n    const [msg, updateMsg] = useState('');\n    const [color, updateColor] = useState('red');\n\n    const orderConfirmationHandler = () => {\n        firebase.database().ref(`mobileMechanic/userRequests/${ userEmail }`).set({\n            customerLocation: locationObject,\n            customerCarName: carName, \n            customerCarImageKey: carImageKey, \n            customerCarModel: carModel, \n            customerCarNumber: carNumber, \n            customerCarDescription: carDescriptionNote, \n            mechanicCNIC: ['dummyCNIC']\n        }).then( () => { \n            updateMsg('Please Wait. We are Finding You a Mechanic ...');\n            \n            Alert.alert(\n                'Finding Mechanics',\n                \"Congratulations! Your order has been placed successfully. Please wait while we connect you to the mechanics near by .... \",\n                [\n                    { text: \"OK\" }\n                ],\n            );\n        })\n        .catch( () => { \n            Alert.alert(\n                'Ooops!',\n                'Some unknown error occurred. Could not place order. Please try again ...',\n                [\n                    { text: \"OK\" }\n                ],\n            );\n        });\n    }\n\n    return(\n        <React.Fragment> \n            <Text style = { {marginTop: 30} }> Confirm Your Order ... </Text>\n            <View> \n                <Text> Location: { locationObject.longitude } and { locationObject.latitude } </Text>\n                <Text> Car: { carName } </Text>\n                <Text> Model: { carModel } </Text>\n                <Text> Number Plate: { carNumber } </Text>\n                <Text> Car Description: { carDescriptionNote } </Text>\n            </View>\n            <View style = { styles.heading4 }>\n                <TouchableOpacity\n                    style = { styles.loginScreenButton }\n                    onPress = { orderConfirmationHandler }\n                    underlayColor = '#fff'>\n                    <Text style = { styles.loginText }> Confirm Order </Text>\n                </TouchableOpacity>\n            </View>\n            <Text style = { {textAlign: 'center', color: color} }> { msg } </Text>\n        </React.Fragment>\n    );\n}\n\nconst styles = StyleSheet.create({\n    heading4: {\n        paddingTop: 0.02*windowHeight,\n        marginLeft: windowWidth * 0.01,\n        marginRight: windowWidth * 0.01,\n        width: windowWidth\n    }, \n    loginScreenButton: {\n        marginRight:40,\n        marginLeft:40,\n        marginBottom:20,\n        paddingTop:10,\n        paddingBottom:10,\n        backgroundColor:\"#35b8b6\",\n        borderRadius:10,\n        borderWidth: 1,\n        borderColor: '#fff',\n        position: 'relative'\n    }, \n    loginText: {\n        color:'#fff',\n        textAlign:'center',\n        paddingLeft : 10,\n        paddingRight : 10\n    }\n});\n\nexport default ConfirmCustOrder\n"]},"metadata":{},"sourceType":"module"}