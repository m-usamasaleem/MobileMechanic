{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screens/CustLocation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MapView from 'react-native-maps';\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\n\nvar CustLocation = function CustLocation(navigationProps) {\n  var carName = navigationProps.navigation.getParam('carName');\n  console.log(carName);\n  var carImageKey = navigationProps.navigation.getParam('carImageKey');\n  console.log(carImageKey);\n  var carModel = navigationProps.navigation.getParam('carModel');\n  var carNumber = navigationProps.navigation.getParam('carNumber');\n  var carDescriptionNote = navigationProps.navigation.getParam('carDescriptionNote');\n  var userEmail = navigationProps.navigation.getParam('userEmail');\n\n  var _useState = useState({\n    latitude: 0,\n    longitude: 0,\n    latitudeDelta: 0.015,\n    longitudeDelta: 0.0121\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentLocation = _useState2[0],\n      setCurrentLocation = _useState2[1];\n\n  useEffect(function () {\n    getCurrentPosition();\n  }, []);\n\n  var getCurrentPosition = function getCurrentPosition() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var lat = parseFloat(position.coords.latitude);\n      var long = parseFloat(position.coords.longitude);\n      var initialRegion = {\n        latitude: lat,\n        longitude: long,\n        latitudeDelta: 0.015,\n        longitudeDelta: 0.0121\n      };\n      setCurrentLocation(initialRegion);\n    }, function (error) {\n      return alert(JSON.stringify(error));\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.heading1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \" Customer Location \")), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: {\n      latitude: currentLocation.latitude,\n      longitude: currentLocation.longitude,\n      latitudeDelta: 0.015,\n      longitudeDelta: 0.0121\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(MapView.Marker, {\n    draggable: true,\n    coordinate: currentLocation,\n    title: \"My Location\",\n    description: \"Hold it to drag\",\n    onDragEnd: function onDragEnd(e) {\n      return setCurrentLocation(e.nativeEvent.coordinate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.heading4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginScreenButton,\n    onPress: function onPress() {\n      return getCurrentPosition();\n    },\n    underlayColor: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \" Reset Location \"))), React.createElement(View, {\n    style: styles.heading4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginScreenButton,\n    onPress: function onPress() {\n      navigationProps.navigation.navigate('ConfirmCustOrder', {\n        locationObject: currentLocation,\n        carName: carName,\n        carImageKey: carImageKey,\n        carModel: carModel,\n        carNumber: carNumber,\n        carDescriptionNote: carDescriptionNote,\n        userEmail: userEmail\n      });\n    },\n    underlayColor: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \" \", 'Next =>', \" \")))));\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: windowHeight,\n    width: windowWidth,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    marginTop: 140\n  }),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject),\n  heading1: {\n    height: 70,\n    paddingTop: 0.05 * windowHeight,\n    flexDirection: 'row',\n    borderBottomWidth: 2,\n    borderRadius: 20,\n    borderColor: '#35b8b6'\n  },\n  title1: {\n    marginLeft: windowWidth * 0.02,\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 25\n  },\n  heading4: {\n    paddingTop: 0.02 * windowHeight,\n    marginLeft: windowWidth * 0.01,\n    marginRight: windowWidth * 0.01,\n    width: windowWidth / 2\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginBottom: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#35b8b6\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    position: 'relative'\n  },\n  loginText: {\n    color: '#fff',\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10\n  }\n});\nexport default CustLocation;","map":{"version":3,"sources":["/home/uzair/Documents/Software-Engineering/MobileMechanic/components/screens/CustLocation.js"],"names":["React","useState","useEffect","MapView","windowHeight","Dimensions","get","height","windowWidth","width","CustLocation","navigationProps","carName","navigation","getParam","console","log","carImageKey","carModel","carNumber","carDescriptionNote","userEmail","latitude","longitude","latitudeDelta","longitudeDelta","currentLocation","setCurrentLocation","getCurrentPosition","navigator","geolocation","position","lat","parseFloat","coords","long","initialRegion","error","alert","JSON","stringify","enableHighAccuracy","timeout","styles","heading1","title1","container","map","e","nativeEvent","coordinate","flexDirection","heading4","loginScreenButton","loginText","navigate","locationObject","StyleSheet","create","absoluteFillObject","justifyContent","alignItems","marginTop","paddingTop","borderBottomWidth","borderRadius","borderColor","marginLeft","fontWeight","color","fontSize","marginRight","marginBottom","paddingBottom","backgroundColor","borderWidth","textAlign","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react' \nimport { Text, StyleSheet, View, Dimensions, TouchableOpacity } from 'react-native' \nimport MapView from 'react-native-maps'\n\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\n\nconst CustLocation = (navigationProps) => {\n    let carName = (navigationProps.navigation.getParam('carName'));\n    console.log(carName);\n    let carImageKey = (navigationProps.navigation.getParam('carImageKey'));\n    console.log(carImageKey);\n    let carModel = (navigationProps.navigation.getParam('carModel'));\n    let carNumber = (navigationProps.navigation.getParam('carNumber'));\n    let carDescriptionNote = (navigationProps.navigation.getParam('carDescriptionNote'));\n    let userEmail = (navigationProps.navigation.getParam('userEmail'));\n    // let shoppingCart = (navigationProps.navigation.getParam('shoppingCart'));\n\n    // More requirements to forward: shopping cart (will be implemented later on ...)\n\n    const [currentLocation,setCurrentLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n        latitudeDelta: 0.015,\n        longitudeDelta: 0.0121,\n    })\n\n    useEffect(() => {\n        getCurrentPosition()\n      }, [])\n\n    const getCurrentPosition = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            var lat = parseFloat(position.coords.latitude)\n            var long = parseFloat(position.coords.longitude)\n      \n            var initialRegion = {\n              latitude: lat,\n              longitude: long,\n              latitudeDelta: 0.015,\n              longitudeDelta: 0.0121,\n            }\n      \n            setCurrentLocation(initialRegion)\n          },\n        (error) => alert(JSON.stringify(error)),\n        {enableHighAccuracy: true, timeout: 20000});\n    }\n    \n    return(\n        <View>\n            <View style = { styles.heading1 }>\n                <Text style = { styles.title1 }> Customer Location </Text>\n            </View>\n            <View style={styles.container}>\n                <MapView\n                    style={styles.map}\n                    region={{\n                        latitude:currentLocation.latitude,\n                        longitude:currentLocation.longitude,\n                        latitudeDelta: 0.015,\n                        longitudeDelta: 0.0121,\n                    }}\n                >\n                <MapView.Marker draggable\n                    coordinate={currentLocation}\n                    title=\"My Location\"\n                    description=\"Hold it to drag\"\n                    onDragEnd={(e) => setCurrentLocation(e.nativeEvent.coordinate)}\n                />\n                </MapView>\n            </View>\n            <View style = { {flexDirection: 'row'} }> \n                <View style = {styles.heading4}>\n                    <TouchableOpacity\n                        style={styles.loginScreenButton}\n                        onPress={ () => getCurrentPosition() }\n                        underlayColor='#fff'>\n                        <Text style={styles.loginText}> Reset Location </Text>\n                    </TouchableOpacity>\n                </View>\n                <View style = {styles.heading4}>\n                    <TouchableOpacity\n                        style={styles.loginScreenButton}\n                        onPress={ () => { navigationProps.navigation.navigate('ConfirmCustOrder', {\n                            locationObject: currentLocation, \n                            carName: carName, \n                            carImageKey: carImageKey, \n                            carModel: carModel, \n                            carNumber: carNumber, \n                            carDescriptionNote: carDescriptionNote,\n                            userEmail: userEmail\n                        })}}\n                        underlayColor='#fff'>\n                        <Text style={styles.loginText}> {'Next =>'} </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      ...StyleSheet.absoluteFillObject,\n      height: windowHeight,\n      width: windowWidth,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      marginTop: 140,\n    },\n    map: {\n      ...StyleSheet.absoluteFillObject,\n    },\n    heading1: {\n        height: 70,\n        paddingTop: 0.05*windowHeight,\n        flexDirection: 'row',\n        borderBottomWidth:2,\n        borderRadius: 20,\n        borderColor:'#35b8b6'\n    },\n    title1: {\n        marginLeft: windowWidth * 0.02,\n        fontWeight: 'bold',\n        color: 'black',\n        fontSize: 25,\n    },\n    heading4: {\n        paddingTop: 0.02*windowHeight,\n        marginLeft: windowWidth * 0.01,\n        marginRight: windowWidth * 0.01,\n        width: windowWidth / 2\n    },\n    \n    loginScreenButton:{\n        marginRight:40,\n        marginLeft:40,\n       marginBottom:20,\n        paddingTop:10,\n        paddingBottom:10,\n        backgroundColor:\"#35b8b6\",\n        borderRadius:10,\n        borderWidth: 1,\n        borderColor: '#fff',\n        position: 'relative'\n      },\n  loginText:{\n      color:'#fff',\n      textAlign:'center',\n      paddingLeft : 10,\n      paddingRight : 10\n  }\n   });\n\n\nexport default CustLocation"]},"metadata":{},"sourceType":"module"}